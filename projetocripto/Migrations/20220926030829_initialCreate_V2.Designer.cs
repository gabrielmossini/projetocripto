// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projetocripto.Models;

#nullable disable

namespace projetocripto.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20220926030829_initialCreate_V2")]
    partial class initialCreate_V2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("projetocripto.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("secretaria")
                        .HasColumnType("int");

                    b.Property<string>("setor")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("projetocripto.Models.Conta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int?>("Impressoraid")
                        .HasColumnType("int");

                    b.Property<int>("clienteid")
                        .HasColumnType("int");

                    b.Property<int>("moedaid")
                        .HasColumnType("int");

                    b.Property<float>("quantidade")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.HasIndex("Impressoraid");

                    b.HasIndex("clienteid");

                    b.HasIndex("moedaid");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("projetocripto.Models.Impressora", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime2");

                    b.Property<string>("setor")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Impressora");
                });

            modelBuilder.Entity("projetocripto.Models.Moeda", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.Property<float>("valor")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("Moedas");
                });

            modelBuilder.Entity("projetocripto.Models.Transasao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime2");

                    b.Property<int>("impressoraid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("impressoraid");

                    b.ToTable("Transacoes");
                });

            modelBuilder.Entity("projetocripto.Models.Conta", b =>
                {
                    b.HasOne("projetocripto.Models.Impressora", null)
                        .WithMany("contas")
                        .HasForeignKey("Impressoraid");

                    b.HasOne("projetocripto.Models.Cliente", "cliente")
                        .WithMany("contas")
                        .HasForeignKey("clienteid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projetocripto.Models.Moeda", "moeda")
                        .WithMany("contas")
                        .HasForeignKey("moedaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");

                    b.Navigation("moeda");
                });

            modelBuilder.Entity("projetocripto.Models.Transasao", b =>
                {
                    b.HasOne("projetocripto.Models.Conta", "impressora")
                        .WithMany("transasoes")
                        .HasForeignKey("impressoraid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("impressora");
                });

            modelBuilder.Entity("projetocripto.Models.Cliente", b =>
                {
                    b.Navigation("contas");
                });

            modelBuilder.Entity("projetocripto.Models.Conta", b =>
                {
                    b.Navigation("transasoes");
                });

            modelBuilder.Entity("projetocripto.Models.Impressora", b =>
                {
                    b.Navigation("contas");
                });

            modelBuilder.Entity("projetocripto.Models.Moeda", b =>
                {
                    b.Navigation("contas");
                });
#pragma warning restore 612, 618
        }
    }
}
